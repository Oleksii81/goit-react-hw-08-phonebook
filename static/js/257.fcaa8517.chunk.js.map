{"version":3,"file":"static/js/257.fcaa8517.chunk.js","mappings":"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","sources":["components/Containers/Container.styled.js","components/Containers/Container.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","hooks/useContacts.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Contacts/Contacts.styled.js","components/ContactsList/ContactsList.jsx","components/Notification/Notification.styled.js","components/Notification/Notification.jsx","components/NotificationFilter/NotificationFilter.styled.js","components/NotificationFilter/NotificationFilter.jsx","images/phone.svg","components/Contacts/Contacts.jsx","pages/Contacts/Contacts.styled.js","components/Modal/Modal.styled.js","images/close.svg","components/FormUpdate/FormUpdate.styled.js","components/FormUpdate/FormUpdate.jsx","components/Modal/Modal.jsx","pages/Contacts/Contacts.jsx","redux/selectors.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import { styled } from \"styled-components\";\n\nexport const ContainersStyle = styled.div`\n    display: flex;\n    align-items: center;\n    //justify-content: center;\n    flex-direction: column;\n    padding: 40px 40px 0 40px;\n    margin: 0 auto;\n    background-color: #85afe4c0;\n    height: 100vh;\n    //width: 100vh;\n\n    @media (min-width: 320px) {\n    min-width: 320px;\n    }\n\n    @media (min-width: 768px) {\n    min-width: 768px;\n    }\n\n    @media (min-width: 1200px) {\n    min-width: 1200px;\n    }\n    .title{\n        font-weight: 600;\n    color: black;\n    font-size: 35px;\n    letter-spacing: 1px;\n    margin-bottom: 30px;\n    margin-top: 30px;\n    text-shadow: 6px 6px 10px rgba(0, 0, 0, 0.8);\n    }\n`","import PropTypes from 'prop-types';\nimport { ContainersStyle } from './Container.styled';\n\nexport const Containers = ({title, children}) => {\n    return(\n        <ContainersStyle>\n            <h2 className='title'>{title}</h2>\n            {children}\n        </ContainersStyle>\n    )\n};\n\nContainers.propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.node\n}","import { styled } from \"styled-components\";\n\nexport const SectionStyle = styled.section`\n    display: flex;\n    align-items: center;\n\tflex-direction: column;\n    height: 100vh;\n    //color: #fff;\n\t//background: #092756;\n    //width: 100vh;\n   // margin: auto;\n    `","import {SectionStyle} from './Section.styled';\n\nexport const Section = ({children}) => {\n    return (\n        <SectionStyle>\n            {children}\n        </SectionStyle>\n    )\n};","import { useSelector } from 'react-redux';\nimport { \n    selectContacts, \n    selectFilter, \n    selectLoading, \n    selectCheckbox,\n    selectIDForModal,\n} from \"redux/selectors\";\n\nexport const useContacts = () => {\n    const isLoading = useSelector(selectLoading);\n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n    const checkbox = useSelector(selectCheckbox);\n    const itemIDForModal = useSelector(selectIDForModal);\n\n    return {\n        isLoading,\n        contacts,\n        filter,\n        checkbox,\n        itemIDForModal,\n    };\n};","import { styled } from \"styled-components\";\n\nexport const FilterStyle = styled.form`\n    width: 400px;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    margin-bottom: 20px;\n    .input{\n        width: 280px; \n        height: 30px;\n        margin-bottom: 30px; \n        background: rgba(0,0,0,0.3);\n        border: none;\n        outline: none;\n        padding: 5px;\n        font-size: 20px;\n        color: #fff;\n        text-shadow: 1px 1px 1px rgba(0,0,0,0.3);\n        border: 1px solid rgba(0,0,0,0.3);\n        border-radius: 4px;\n    }\n    .input:focus { \n        box-shadow: inset 0 -5px 45px rgba(100,100,100,0.4), 0 1px 1px rgba(255,255,255,0.2); \n    }\n`","import { useDispatch, useSelector } from 'react-redux';\nimport { filterValue } from \"redux/Filter/filterSlice\";\nimport { selectFilter } from 'redux/selectors';\nimport { FilterStyle } from \"./Filter.styled\";\n\nexport const Filter = () => {\n\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n    \n  \n    const handleFilterChange = (event) => {\n      dispatch(filterValue(event.target.value));\n    };\n\n    return(\n        <FilterStyle>\n            <label className='label' htmlFor=\"filter\">\n                <input className=\"input\"\n                    type=\"text\"\n                    name=\"filter\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces\"\n                    required\n                    placeholder=''\n                    value={filter}\n                    onChange={handleFilterChange}></input>\n            </label>\n        </FilterStyle>\n    )\n};\n","import { styled } from \"styled-components\";\n\n\nexport const ContactsStyle = styled.ul`\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    font-size: 20px;\n    margin-bottom: 160px;\n    .list{\n        margin: 0;\n        margin-bottom: 20px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    .list-name{\n        margin: 0;\n        margin-right: 10px;\n    }\n    .list-number{\n        margin: 0;\n        margin-right: 20px;\n    }\n    .btn { \n        display: inline-block;\n        display: inline;\n        margin-left: auto;\n        zoom: 1; \n        padding: 4px 10px 4px; \n        margin-bottom: 0; \n        font-size: 13px; \n        line-height: 18px; \n        color: #333333; \n        text-align: center;\n        text-shadow: 0 1px 1px rgba(255, 255, 255, 0.75); \n        vertical-align: middle; \n        background-color: #f5f5f5; \n        border-color: #e6e6e6 #e6e6e6 #e6e6e6; \n        border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25); \n        border: 1px solid #e6e6e6; \n        border-radius: 4px; \n        cursor: pointer; \n        *margin-left: .3em; \n    }\n    .btn-large { \n        padding: 5px; \n        font-size: 13px; \n        line-height: normal; \n        border-radius: 5px; \n    }\n    .btn:hover { \n        color: #333333;\n        text-decoration: none;  \n        background-color: #e6e6e6; \n        background-position: 0 -15px; \n    }\n    .btn-primary, .btn-primary:hover { \n        text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25); \n        color: #ffffff; \n    }\n    .btn-primary { \n        background-color: #4a77d4;   \n        border: 1px solid #3762bc; \n        text-shadow: 1px 1px 1px rgba(0,0,0,0.4); \n        box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.5); \n    }\n    .btn-primary:hover, .btn-primary:active, .btn-primary.active{ \n        filter: none; \n        background-color: #5549b2;\n    }\n    .btn-block { \n        width: 60px; \n        height: 25px;\n        display: block; \n    }\n`","import PropTypes from 'prop-types';\nimport { ContactsStyle } from \"../Contacts/Contacts.styled\";\n\nexport const ContactsList = ({filteredContacts, onDeleteContact}) => {\n    return (\n        <ContactsStyle>\n            {filteredContacts.map(({id, name, number}) => (\n                <li className=\"list\" key={id}>\n                    <h3 className=\"list-name\">{name}:</h3>\n                    <p className=\"list-number\">{number}</p>\n                    <button className=\"btn btn-primary btn-block btn-large\" \n                    type=\"button\"\n                    onClick={() => onDeleteContact(id)}>Delete</button>\n                </li>\n            ))}\n        </ContactsStyle>\n    )\n};\n\nContactsList.propTypes ={\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n        })\n    ),\n    onDeleteContact: PropTypes.func.isRequired,\n};","import { styled } from \"styled-components\";\n\nexport const TextStyle = styled.div`\n    margin: 0;\n    padding: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 40px;\n    .text-style{\n        font-size: 20px;\n    }\n`","import PropTypes from 'prop-types';\nimport { TextStyle } from './Notification.styled';\n\n\nexport const Notification = ({message}) => {\n    return (\n        <TextStyle>\n            <h3 className='text-style'>{message}</h3>\n        </TextStyle>\n    )\n};\n\nNotification.protoTypes = {\n    message: PropTypes.string.isRequired,\n};","import { styled } from \"styled-components\";\n\n\nexport const TextFilterStyle = styled.div`\n    margin: 0;\n    padding: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 40px;\n    .text-style{\n        font-size: 20px;\n    }\n`","import PropTypes from 'prop-types';\nimport {TextFilterStyle } from './NotificationFilter.styled'\n\nexport const NotificationFilter = ({notification}) => {\n    return(\n        <TextFilterStyle>\n            <h3 className='text-style'>{notification}</h3>\n        </TextFilterStyle>\n    )\n}\n\nNotificationFilter.protoTypes = {\n    message: PropTypes.string.isRequired,\n};","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgPhone(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"800px\",\n    height: \"800px\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21 5.5C21 14.0604 14.0604 21 5.5 21C5.11378 21 4.73086 20.9859 4.35172 20.9581C3.91662 20.9262 3.69906 20.9103 3.50103 20.7963C3.33701 20.7019 3.18146 20.5345 3.09925 20.364C3 20.1582 3 19.9181 3 19.438V16.6207C3 16.2169 3 16.015 3.06645 15.842C3.12515 15.6891 3.22049 15.553 3.3441 15.4456C3.48403 15.324 3.67376 15.255 4.05321 15.117L7.26005 13.9509C7.70153 13.7904 7.92227 13.7101 8.1317 13.7237C8.31637 13.7357 8.49408 13.7988 8.64506 13.9058C8.81628 14.0271 8.93713 14.2285 9.17882 14.6314L10 16C12.6499 14.7999 14.7981 12.6489 16 10L14.6314 9.17882C14.2285 8.93713 14.0271 8.81628 13.9058 8.64506C13.7988 8.49408 13.7357 8.31637 13.7237 8.1317C13.7101 7.92227 13.7904 7.70153 13.9509 7.26005L13.9509 7.26005L15.117 4.05321C15.255 3.67376 15.324 3.48403 15.4456 3.3441C15.553 3.22049 15.6891 3.12515 15.842 3.06645C16.015 3 16.2169 3 16.6207 3H19.438C19.9181 3 20.1582 3 20.364 3.09925C20.5345 3.18146 20.7019 3.33701 20.7963 3.50103C20.9103 3.69907 20.9262 3.91662 20.9581 4.35173C20.9859 4.73086 21 5.11378 21 5.5Z\",\n    stroke: \"#000000\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPhone);\nexport default __webpack_public_path__ + \"static/media/phone.b872a627189fd4beb106f6f7841191ea.svg\";\nexport { ForwardRef as ReactComponent };","import { useSelector, useDispatch } from 'react-redux';\n//import { remove } from \"redux/contactsSlice\";\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Notification } from \"components/Notification/Notification\";\nimport { NotificationFilter } from \"components/NotificationFilter/NotificationFilter\";\nimport { deleteContactById } from 'redux/Contacts/contactOperations';\nimport { selectContacts, selectFilter, selectLoading } from '../../redux/selectors';\n\nexport const Contacts = () => {\n\n    const isLoading = useSelector(selectLoading);\n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n    //const contacts = useSelector(state => state.contacts);\n    //const dispatch = useDispatch();\n    //const filter = useSelector(state => state.filter);\n    console.log(contacts);\n    //console.log(filter);\n\n    const filteredContacts = contacts.filter(contact => {\n        return (\n            contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n            contact.number.includes(filter)\n        );\n    });\n  \n    const onDeleteContact = contactId  => {\n        dispatch(deleteContactById(contactId));\n    };\n\n    if (isLoading) {\n        return <p>Loading data...</p>\n    }\n\n    return (\n        <>\n            {contacts.length === 0 ? (\n            <Notification message=\"There are no contacts in your list, sorry\" />\n            ) : filteredContacts.length > 0 ? (\n            <ContactsList\n                filteredContacts={filteredContacts}\n                onDeleteContact={onDeleteContact}\n            />\n            ) : (\n            <NotificationFilter notification=\"No contacts found that match the filter\" />\n            )}\n        </>\n    );\n};","import {styled} from \"styled-components\";\n\nexport const RedirectLinkStyles = styled.div`\n    background-color: #85afe4c0;\n    width: 100vh;\n    .link {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 5px;\n        text-decoration: none;\n        padding: 10px;\n        font-size: 18px;\n        letter-spacing: 1px;\n        transition: color 0.25s;\n\n        &:hover, &:focus {\n        color: #5549b2;\n        }\n    \n    @media (min-width: 768px) {\n      font-size: 24px;\n    }\n  }\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n`","import {styled} from \"styled-components\"\n\nexport const BackdropModalStyle = styled.div`\n\n`","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgClose(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 30 30\",\n    width: \"30px\",\n    height: \"30px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 7 4 C 6.744125 4 6.4879687 4.0974687 6.2929688 4.2929688 L 4.2929688 6.2929688 C 3.9019687 6.6839688 3.9019687 7.3170313 4.2929688 7.7070312 L 11.585938 15 L 4.2929688 22.292969 C 3.9019687 22.683969 3.9019687 23.317031 4.2929688 23.707031 L 6.2929688 25.707031 C 6.6839688 26.098031 7.3170313 26.098031 7.7070312 25.707031 L 15 18.414062 L 22.292969 25.707031 C 22.682969 26.098031 23.317031 26.098031 23.707031 25.707031 L 25.707031 23.707031 C 26.098031 23.316031 26.098031 22.682969 25.707031 22.292969 L 18.414062 15 L 25.707031 7.7070312 C 26.098031 7.3170312 26.098031 6.6829688 25.707031 6.2929688 L 23.707031 4.2929688 C 23.316031 3.9019687 22.682969 3.9019687 22.292969 4.2929688 L 15 11.585938 L 7.7070312 4.2929688 C 7.5115312 4.0974687 7.255875 4 7 4 z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgClose);\nexport default __webpack_public_path__ + \"static/media/close.8265f088f188bceed9ff7ed9b6ce0433.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\n\nexport const UpdateFromStyles = styled.form`\n\n`","import { UpdateFromStyles } from \"./FormUpdate.styled\";\n//import {ReactComponent as WorldIcon} from \"../../images/world.svg\";\nimport {ReactComponent as UserIcon} from \"../../images/user.svg\";\nimport {ReactComponent as PnoneIcon} from \"../../images/phone.svg\";\nimport { useDispatch } from \"react-redux\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { useContacts } from \"hooks/useContacts\";\n//import { nanoid } from 'nanoid';\nimport { toast } from 'react-toastify';\nimport { updateContactById } from \"redux/Contacts/contactOperations\";\nimport { getAllContacts } from 'redux/Contacts/contactOperations';\n\nexport const FormUpdate = (props) => {\n    const dispatch = useDispatch();\n    const {contacts, itemIDForModal} = useContacts();\n    const [setIsOptionsListActive] = useState(false);\n    const dropdownRef = useRef(null); \n\n    // INITIAL DATA RENDER FOR INPUT FIELDS//\n    const selectedContact = contacts.find((item) => item.id === itemIDForModal);\n    const selectedNumber = selectedContact.number.split(\"-\").slice(-4).join(\"\");\n\n    const handleBackgroundClick = (event) => {\n        if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n            setIsOptionsListActive(false);\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener('click', handleBackgroundClick);\n\n        return () => {\n            document.removeEventListener('click', handleBackgroundClick);\n        };\n    });\n\n    // SUBMIT FORM////////////////////////\n    const onFormUpdateSubmit = (event) => {\n        event.preventDefault();\n        const code = event.target.country.value;\n        const name = event.target.name.value;\n        const number = event.target.number.value;\n\n        const codeValue = code.split(\":\")[1].trim();\n        const digits = number.split(\"\");\n        const formattedNumber = `${digits.slice(0, 2).join('')}-${digits.slice(2, 5).join('')}-${digits.slice(5, 7).join('')}-${digits.slice(7, 9).join('')}`;\n        const phoneNumber = `${codeValue }-${formattedNumber}`;\n\n        const existedContact = {name: selectedContact.name, number: selectedContact.number}\n        const contactData = {\n            id: selectedContact.id,\n            name,\n            number: phoneNumber\n        };\n\n        if (contactData.name === existedContact.name && contactData.number === existedContact.number) {\n            toast.warning(`You are trying to update unchanged data.`);\n            return\n        }\n\n        dispatch(updateContactById(contactData))\n        .then(() => {\n          dispatch(getAllContacts());\n          props.formShowUpdateForm();\n        })\n        .catch((error) => {\n          console.error('Error updating contact:', error);\n        });\n        event.target.reset();\n    };\n    \n    return(\n        <UpdateFromStyles onSubmit={onFormUpdateSubmit}>\n            <label className='label' htmlFor='name'>\n                <div className='descr-div'>\n                    <UserIcon className=\"form-icon\" width=\"30\" height=\"25\"/>\n                    <span className=\"input-title\">Username</span>\n                </div>\n                <input className=\"input\"\n                    type=\"text\"\n                    name=\"name\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    placeholder='Rosie Simpson'\n                    id='name'\n                    defaultValue={selectedContact.name}\n                />\n            </label>\n            <label className='label' htmlFor='number'>\n                <div className='descr-div'>\n                    <PnoneIcon className=\"form-icon\" width=\"30\" height=\"30\"/>\n                    <span className=\"input-title\">Number</span>\n                </div>\n                <input className=\"input input-below\"\n                    type=\"tel\"\n                    name=\"number\"\n                    title=\"Phone number must be digits only. Without spaces, dashes, parentheses or +\"\n                    required\n                    placeholder='459125687'\n                    minLength=\"1\"\n                    maxLength=\"9\"\n                    id='number'\n                    defaultValue={selectedNumber}\n                />\n            </label>\n            <p className=\"descr-text descr-text-lower\">&#8727; Type the number in the format mentioned above only.</p>\n            <button \n                className=\"btn-f btn-primary-f btn-block-f btn-large-f\" \n                type='submit'\n                >Update Contact\n            </button>\n        </UpdateFromStyles>\n    );\n};","import { createPortal } from \"react-dom\";\nimport { BackdropModalStyle } from \"./Modal.styled\";\nimport { ReactComponent as UserIcon } from \"../../images/user.svg\";\nimport { ReactComponent as PnoneIcon } from \"../../images/phone.svg\";\nimport { ReactComponent as CloseIcon } from \"../../images/close.svg\";\nimport { useRef, useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useContacts } from \"hooks/useContacts\";\nimport { clearSelectedIDForModal } from \"redux/Filter/filterSlice\";\nimport { deleteContactById } from 'redux/Contacts/contactOperations';\nimport { FormUpdate } from \"components/FormUpdate/FormUpdate\";\n\n\nconst modalRoot = document.querySelector('#modal-root');\n\n\nexport const Modal = () => {\n    const dispatch = useDispatch();\n    const {contacts, itemIDForModal} = useContacts();\n    const [showModal, setShowModal] = useState(false);\n    const [showUpdateForm, setShowUpdateForm] = useState(false);\n    const modalRef = useRef(null);\n\n    const selectedContact = contacts.find((item) => item.id === itemIDForModal);\n\n    useEffect(() => {\n        if (itemIDForModal) {\n          setShowModal(true);\n          setShowUpdateForm(false);\n        } else {\n          setShowModal(false);\n        }\n\n        const handleKeyPress = (event) => {\n            if (event.key === 'Escape') {\n                closeModal();\n            }\n        };\n        \n        const handleBackgroundClick = (event) => {\n            if (modalRef.current && !modalRef.current.contains(event.target)) {\n                closeModal();\n            }\n        };\n        \n        const closeModal = () => {\n            dispatch(clearSelectedIDForModal(\"\"));\n        };\n\n        document.addEventListener('keydown', handleKeyPress);\n        document.addEventListener('click', handleBackgroundClick);\n      \n        return () => {\n          document.removeEventListener('keydown', handleKeyPress);\n          document.removeEventListener('click', handleBackgroundClick);\n        };\n    }, [dispatch, itemIDForModal]);\n\n    if (!selectedContact) {\n        return\n    }\n\n    const onDeleteContact = contactId  => {\n        dispatch(deleteContactById(contactId));\n        setShowModal(false);\n    };\n\n    const toggleUpdateForm = () => {\n        setShowUpdateForm(prevShowUpdateForm => !prevShowUpdateForm);\n    };\n    const handleUpdateFormOpen = () => {\n        toggleUpdateForm();\n    };\n\n    const formShowUpdateForm = () => {\n        setShowUpdateForm(false);\n    };\n\n    return createPortal(\n        showModal && (\n            <BackdropModalStyle>\n                <div className={`modal ${showUpdateForm ? 'modal-open-for-form' : ''}`} ref={modalRef}>\n                    <button type=\"button\" className=\"close-btn\"  onClick={() => dispatch(clearSelectedIDForModal())}>\n                        <CloseIcon className=\"close-icon\" width=\"35\" height=\"35\"/>\n                    </button>\n                    <div className=\"info-container\">\n                        <div className=\"user-container\">\n                            <div className=\"cont-sum\">\n                                <UserIcon className=\"icon\" width=\"30\" height=\"25\"/>\n                                <p className=\"title-user\">User:</p>\n                            </div>\n                            <div className=\"list-name-container\">\n                                <p className=\"list-name\">{selectedContact.name}</p>:\n                            </div>\n                        </div>\n                        <div className=\"number-container\">\n                            <div className=\"cont-sum\">\n                                <PnoneIcon className=\"icon\" width=\"30\" height=\"25\"/>\n                                <p className=\"title-number\">Number:</p>\n                            </div>\n                            <div className=\"list-number-container\">\n                                <p className=\"list-number\">{selectedContact.number}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"btn-cont\">\n                        <button\n                            className=\"btn btn-primary btn-block btn-large\"\n                            type=\"button\"\n                            onClick={() => onDeleteContact(selectedContact.id)}\n                            >Delete\n                        </button>\n                        <button\n                            className=\"btn btn-primary btn-block btn-large\"\n                            type=\"button\"\n                            onClick={handleUpdateFormOpen}\n                            >Update\n                        </button>\n                    </div> \n                    <div className={`update-form ${showUpdateForm ? 'update-form-visible' : ''}`}>\n                        <FormUpdate formShowUpdateForm={formShowUpdateForm}/>\n                    </div>\n                </div>\n            </BackdropModalStyle>\n        ),\n        modalRoot\n    );\n};","import { Section } from 'components/Section/Section';\nimport { Containers } from 'components/Containers/Container';\nimport { Filter } from 'components/Filter/Filter';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { RedirectLinkStyles } from './Contacts.styled';\nimport { useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { getAllContacts } from 'redux/Contacts/contactOperations';\nimport { Modal } from 'components/Modal/Modal';\n\nconst ContactsPage = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n      dispatch(getAllContacts())\n    })\n    \n    return(\n        <>\n            <Section>\n                <RedirectLinkStyles>\n                    <NavLink className='link btn btn-primary btn-block btn-large' to=\"/createcontacts\">\n                        Back to Ctreate\n                    </NavLink>\n                </RedirectLinkStyles>\n                <Containers title={'Filter'}>\n                    <Filter/>\n                </Containers>\n                <Containers title={'Contacts'}>\n                    <Contacts/>\n                </Containers>\n            </Section>\n            <Modal/>\n        </>\n    );\n};\n\n\nexport default ContactsPage;","export const selectContacts = state => state.contacts.contacts;\nexport const selectFilter = state => state.filter.filter;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectCheckbox = state => state.contacts.selectedCheckedCheckbox;\nexport const selectIDForModal = state => state.contacts.selectedIDForModal;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["ContainersStyle","styled","_templateObject","_taggedTemplateLiteral","Containers","_ref","title","children","_jsxs","_jsx","className","SectionStyle","Section","useContacts","isLoading","useSelector","selectLoading","contacts","selectContacts","filter","selectFilter","checkbox","selectCheckbox","itemIDForModal","selectIDForModal","FilterStyle","Filter","dispatch","useDispatch","htmlFor","type","name","required","placeholder","value","onChange","event","filterValue","target","ContactsStyle","ContactsList","filteredContacts","onDeleteContact","map","_ref2","id","number","onClick","TextStyle","Notification","message","protoTypes","PropTypes","TextFilterStyle","NotificationFilter","notification","_path","Contacts","console","log","contact","toLowerCase","includes","_Fragment","length","contactId","deleteContactById","RedirectLinkStyles","BackdropModalStyle","_excluded","_extends","Object","assign","bind","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgPhone","svgRef","titleId","props","width","height","viewBox","fill","xmlns","ref","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","SvgClose","UpdateFromStyles","FormUpdate","_useContacts","_useState","useState","setIsOptionsListActive","_slicedToArray","dropdownRef","useRef","selectedContact","find","item","selectedNumber","split","slice","join","handleBackgroundClick","current","contains","useEffect","document","addEventListener","removeEventListener","onSubmit","preventDefault","code","country","codeValue","trim","digits","formattedNumber","concat","phoneNumber","existedContact","contactData","updateContactById","then","getAllContacts","formShowUpdateForm","catch","error","reset","toast","UserIcon","defaultValue","PnoneIcon","minLength","maxLength","modalRoot","querySelector","Modal","_useState2","showModal","setShowModal","_useState3","_useState4","showUpdateForm","setShowUpdateForm","modalRef","handleKeyPress","closeModal","clearSelectedIDForModal","createPortal","CloseIcon","prevShowUpdateForm","NavLink","to","state","selectedCheckedCheckbox","selectedIDForModal","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}