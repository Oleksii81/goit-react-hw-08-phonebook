{"version":3,"file":"static/js/567.66d24d0f.chunk.js","mappings":"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","sources":["components/Containers/Container.styled.js","components/Containers/Container.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/Form/Form.styled.js","components/Form/Form.jsx","components/ContactsSum/ContactsSum.styled.js","components/ContactsSum/ContactsSum.jsx","hooks/useContacts.js","pages/CreateContacts/CreateContacts.jsx","redux/selectors.js"],"sourcesContent":["import { styled } from \"styled-components\";\n\nexport const ContainersStyle = styled.div`\n    display: flex;\n    align-items: center;\n    //justify-content: center;\n    flex-direction: column;\n    padding: 40px 40px 0 40px;\n    margin: 0 auto;\n    background-color: #85afe4c0;\n    height: 100vh;\n    width: -webkit-fill-available;\n\n    @media (min-width: 320px) {\n    min-width: 320px;\n    }\n\n    @media (min-width: 768px) {\n    min-width: 768px;\n    }\n\n    @media (min-width: 1200px) {\n    min-width: 1200px;\n    }\n    .title{\n        font-weight: 600;\n    color: black;\n    font-size: 35px;\n    letter-spacing: 1px;\n    margin-bottom: 30px;\n    margin-top: 30px;\n    text-shadow: 6px 6px 10px rgba(0, 0, 0, 0.8);\n    }\n`","import PropTypes from 'prop-types';\nimport { ContainersStyle } from './Container.styled';\n\nexport const Containers = ({title, children}) => {\n    return(\n        <ContainersStyle>\n            <h2 className='title'>{title}</h2>\n            {children}\n        </ContainersStyle>\n    )\n};\n\nContainers.propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.node\n}","import { styled } from \"styled-components\";\n\nexport const SectionStyle = styled.section`\n    display: flex;\n    align-items: center;\n\tflex-direction: column;\n    height: 100vh;\n    //color: #fff;\n\t//background: #092756;\n    //width: 100vh;\n   // margin: auto;\n    `","import {SectionStyle} from './Section.styled';\n\nexport const Section = ({children}) => {\n    return (\n        <SectionStyle>\n            {children}\n        </SectionStyle>\n    )\n};","import { styled } from \"styled-components\";\n\nexport const FormStyle = styled.form`\n    //width: 100vh;\n    //height: 250px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    //position: relative;\n    margin-bottom: 30px;\n    .label{\n        margin-bottom: 20px;\n    }\n    .input-title{\n        font-size:20px;\n        position: absolute;\n        transform: translateY(-30px);\n    }\n    .input{\n        min-width: 320px; \n        height: 32px;\n        margin-bottom: 30px; \n        background: rgba(0,0,0,0.3);\n        border: none;\n        outline: none;\n        padding: 5px;\n        font-size: 20px;\n        color: #fff;\n        text-shadow: 1px 1px 1px rgba(0,0,0,0.3);\n        border: 1px solid rgba(0,0,0,0.3);\n        border-radius: 4px;\n        box-shadow: inset 0 -5px 45px rgba(100,100,100,0.2), 0 1px 1px rgba(255,255,255,0.2);\n    }\n    .input:focus { \n        box-shadow: inset 0 -5px 45px rgba(100,100,100,0.4), 0 1px 1px rgba(255,255,255,0.2); \n    }\n    .btn { \n        display: inline-block;\n        display: inline; \n        zoom: 1; \n        padding: 4px 10px 4px; \n        margin-bottom: 0; \n        font-size: 13px; \n        line-height: 18px; \n        color: #333333; \n        text-align: center;\n        text-shadow: 0 1px 1px rgba(255, 255, 255, 0.75); \n        vertical-align: middle; \n        background-color: #f5f5f5; \n        border-color: #e6e6e6 #e6e6e6 #e6e6e6; \n        border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25); \n        border: 1px solid #e6e6e6; \n        -webkit-border-radius: 4px; \n        -moz-border-radius: 4px; \n        border-radius: 4px; \n        cursor: pointer;\n    }\n    .btn-large { \n        padding: 9px 14px; \n        font-size: 15px; \n        line-height: normal;  \n        border-radius: 5px; \n    }\n    .btn:hover { \n        color: #333333;\n        text-decoration: none;  \n        background-color: #5549b2; \n        background-position: 0 -15px; \n        transition: background-position 0.1s linear;\n    }\n    .btn-primary, .btn-primary:hover { \n        text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25); \n        color: #ffffff; \n    }\n    .btn-primary { \n        background-color: #4a77d4;  \n        border: 1px solid #3762bc; \n        text-shadow: 1px 1px 1px rgba(0,0,0,0.4); \n        box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.5); \n    }\n    .btn-primary:hover, .btn-primary:active, .btn-primary.active{ \n        filter: none; \n        background-color: #5549b2;\n    }\n    .btn-block { \n        width: 200px; \n        height: 40px;\n        display:block; \n    }\n`","import { addNewContact } from 'redux/Contacts/contactOperations';\nimport { selectContacts } from 'redux/selectors';\nimport { useDispatch, useSelector } from \"react-redux\";\n//import { nanoid } from \"nanoid\";\nimport { FormStyle } from './Form.styled';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  \n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const name = event.target.name.value;\n    const number = event.target.number.value;\n\n    if (contacts.some(\n        contact => \n        contact.number === number || \n        contact.name.toLowerCase() === name.toLowerCase())){\n          alert(`${name} or entered ${number} number is already in contacts.`);\n          return;\n        }\n\n    event.target.reset();\n    dispatch(addNewContact({name, number}))\n}; \n\nconst isFormValid = event => event.target.checkValidity();\n\n  return (\n    <FormStyle onSubmit={handleSubmit}>\n      <label className=\"label\" htmlFor=\"name\">\n        <span className=\"input-title\">Name</span>\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"name\"\n          required\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          id='name'\n        />\n      </label>\n      <label htmlFor=\"number\">\n        <span className=\"input-title\">Number</span>\n        <input\n          className=\"input\"\n          type=\"tel\"\n          name=\"number\"\n          required\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}|^\\d{3}-\\d{3}-\\d{3}$\"\n          id='number'\n        />\n      </label>\n      <button\n        className=\"btn btn-primary btn-block btn-large\"\n        type=\"submit\"\n        disabled={!isFormValid}\n      >\n        Add Contact\n      </button>\n    </FormStyle>\n  );\n};\n","import { styled } from \"styled-components\";\n\nexport const ContactsContainer = styled.div`\n    //width: 100vh;\n    text-align: center;\n    \n    .btn { \n        display: flex; \n        zoom: 1; \n        padding: 4px 10px 4px; \n        margin-bottom: 0; \n        justify-content: center;\n        margin: 0 auto;\n        font-size: 13px; \n        line-height: 18px; \n        color: #333333; \n        text-align: center;\n        text-shadow: 0 1px 1px rgba(255, 255, 255, 0.75); \n        vertical-align: middle; \n        background-color: #f5f5f5; \n        border-color: #e6e6e6 #e6e6e6 #e6e6e6; \n        border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25); \n        border: 1px solid #e6e6e6; \n        -webkit-border-radius: 4px; \n        -moz-border-radius: 4px; \n        border-radius: 4px; \n        cursor: pointer;\n    }\n    .btn-large { \n        padding: 9px 14px; \n        font-size: 15px; \n        line-height: normal;  \n        border-radius: 5px; \n        text-decoration: none;\n    }\n    .btn:hover { \n        color: #333333;\n        text-decoration: none;  \n        background-color: #5549b2; \n        background-position: 0 -15px; \n        transition: background-position 0.1s linear;\n    }\n    .btn-primary, .btn-primary:hover { \n        text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25); \n        color: #ffffff; \n    }\n    .btn-primary { \n        background-color: #4a77d4;  \n        border: 1px solid #3762bc; \n        text-shadow: 1px 1px 1px rgba(0,0,0,0.4); \n        box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.5); \n    }\n    .btn-primary:hover, .btn-primary:active, .btn-primary.active{ \n        filter: none; \n        background-color: #5549b2;\n    }\n    .btn-block { \n        width: 200px; \n        display:block; \n    }\n`","import { ContactsContainer } from \"./ContactsSum.styled\";\nimport { NavLink } from 'react-router-dom';\nimport { useContacts } from \"hooks/useContacts\";\n//import { DataLoading } from 'components/CustomLoaders/CustomLoaders';\n\nexport const ContactsSum = () => {\n    const {contacts, isLoading} = useContacts();  \n\n    return isLoading ? (\n        \"Is Loading...\"\n        ) : (\n        <ContactsContainer>\n            <p className=\"contacts-text\">You have already {contacts.length} contacts in your list</p>\n            <NavLink className='link btn btn-primary btn-block btn-large' to=\"/contacts\">\n                See All Contacts\n            </NavLink>\n        </ContactsContainer>\n    );\n};","import { useSelector } from 'react-redux';\nimport { \n    selectContacts, \n    selectFilter, \n    selectLoading, \n} from \"redux/selectors\";\n\nexport const useContacts = () => {\n    const isLoading = useSelector(selectLoading);\n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n\n    return {\n        isLoading,\n        contacts,\n        filter,\n    };\n};","import { Section } from 'components/Section/Section';\nimport { Containers } from 'components/Containers/Container';\nimport { Form } from 'components/Form/Form';\nimport { ContactsSum } from 'components/ContactsSum/ContactsSum';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getAllContacts } from 'redux/Contacts/contactOperations';\n\nconst CreateContactsPage = () => {\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllContacts())\n  })\n\n  return(\n    <Section>\n      <Containers title={'Phonebook'}>\n        <Form />\n        <ContactsSum/>\n      </Containers>\n    </Section>\n  );\n};\n\nexport default CreateContactsPage;","export const selectContacts = state => state.contacts.contacts;\nexport const selectFilter = state => state.filter.filter;\nexport const selectLoading = state => state.contacts.isLoading;\n"],"names":["ContainersStyle","styled","_templateObject","_taggedTemplateLiteral","Containers","_ref","title","children","_jsxs","_jsx","className","SectionStyle","Section","FormStyle","Form","dispatch","useDispatch","contacts","useSelector","selectContacts","onSubmit","event","preventDefault","name","target","value","number","some","contact","toLowerCase","alert","concat","reset","addNewContact","htmlFor","type","required","pattern","id","disabled","checkValidity","ContactsContainer","ContactsSum","_useContacts","isLoading","selectLoading","filter","selectFilter","length","NavLink","to","useEffect","getAllContacts","state"],"sourceRoot":""}