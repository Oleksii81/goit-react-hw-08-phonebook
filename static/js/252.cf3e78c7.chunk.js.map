{"version":3,"file":"static/js/252.cf3e78c7.chunk.js","mappings":"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","sources":["components/Containers/Container.styled.js","components/Containers/Container.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Contacts/Contacts.styled.js","components/ContactsList/ContactsList.jsx","components/Notification/Notification.styled.js","components/Notification/Notification.jsx","components/NotificationFilter/NotificationFilter.styled.js","components/NotificationFilter/NotificationFilter.jsx","components/Contacts/Contacts.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx","redux/selectors.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import { styled } from \"styled-components\";\n\nexport const ContainersStyle = styled.div`\n    display: flex;\n    align-items: center;\n    //justify-content: center;\n    flex-direction: column;\n    padding: 40px 40px 0 40px;\n    margin: 0 auto;\n    background-color: #85afe4c0;\n    height: 100vh;\n    width: -webkit-fill-available;\n\n    @media (min-width: 320px) {\n    min-width: 320px;\n    }\n\n    @media (min-width: 768px) {\n    min-width: 768px;\n    }\n\n    @media (min-width: 1200px) {\n    min-width: 1200px;\n    }\n    .title{\n        font-weight: 600;\n    color: black;\n    font-size: 35px;\n    letter-spacing: 1px;\n    margin-bottom: 30px;\n    margin-top: 30px;\n    text-shadow: 6px 6px 10px rgba(0, 0, 0, 0.8);\n    }\n`","import PropTypes from 'prop-types';\nimport { ContainersStyle } from './Container.styled';\n\nexport const Containers = ({title, children}) => {\n    return(\n        <ContainersStyle>\n            <h2 className='title'>{title}</h2>\n            {children}\n        </ContainersStyle>\n    )\n};\n\nContainers.propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.node\n}","import { styled } from \"styled-components\";\n\nexport const SectionStyle = styled.section`\n    display: flex;\n    align-items: center;\n\tflex-direction: column;\n    height: 100vh;\n    //color: #fff;\n\t//background: #092756;\n    //width: 100vh;\n   // margin: auto;\n    `","import {SectionStyle} from './Section.styled';\n\nexport const Section = ({children}) => {\n    return (\n        <SectionStyle>\n            {children}\n        </SectionStyle>\n    )\n};","import { styled } from \"styled-components\";\n\nexport const FilterStyle = styled.form`\n    //width: 400px;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    margin-bottom: 20px;\n    .input{\n        width: 280px; \n        height: 30px;\n        margin-bottom: 30px; \n        background: rgba(0,0,0,0.3);\n        border: none;\n        outline: none;\n        padding: 5px;\n        font-size: 20px;\n        color: #fff;\n        text-shadow: 1px 1px 1px rgba(0,0,0,0.3);\n        border: 1px solid rgba(0,0,0,0.3);\n        border-radius: 4px;\n    }\n    .input:focus { \n        box-shadow: inset 0 -5px 45px rgba(100,100,100,0.4), 0 1px 1px rgba(255,255,255,0.2); \n    }\n`","import { useDispatch, useSelector } from 'react-redux';\nimport { filterValue } from \"redux/Filter/filterSlice\";\nimport { selectFilter } from 'redux/selectors';\nimport { FilterStyle } from \"./Filter.styled\";\n\nexport const Filter = () => {\n\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n    \n  \n    const handleFilterChange = (event) => {\n      dispatch(filterValue(event.target.value));\n    };\n\n    return(\n        <FilterStyle>\n            <label className='label' htmlFor=\"filter\">\n                <input className=\"input\"\n                    type=\"text\"\n                    name=\"filter\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces\"\n                    required\n                    placeholder=''\n                    value={filter}\n                    onChange={handleFilterChange}></input>\n            </label>\n        </FilterStyle>\n    )\n};\n","import { styled } from \"styled-components\";\n\n\nexport const ContactsStyle = styled.ul`\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    font-size: 20px;\n    margin-bottom: 160px;\n    .list{\n        margin: 0;\n        margin-bottom: 20px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    .list-name{\n        margin: 0;\n        margin-right: 10px;\n    }\n    .list-number{\n        margin: 0;\n        margin-right: 20px;\n    }\n    .btn { \n        display: inline-block;\n        display: inline;\n        margin-left: auto;\n        zoom: 1; \n        padding: 4px 10px 4px; \n        margin-bottom: 0; \n        font-size: 13px; \n        line-height: 18px; \n        color: #333333; \n        text-align: center;\n        text-shadow: 0 1px 1px rgba(255, 255, 255, 0.75); \n        vertical-align: middle; \n        background-color: #f5f5f5; \n        border-color: #e6e6e6 #e6e6e6 #e6e6e6; \n        border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25); \n        border: 1px solid #e6e6e6; \n        border-radius: 4px; \n        cursor: pointer; \n        *margin-left: .3em; \n    }\n    .btn-large { \n        padding: 5px; \n        font-size: 13px; \n        line-height: normal; \n        border-radius: 5px; \n    }\n    .btn:hover { \n        color: #333333;\n        text-decoration: none;  \n        background-color: #e6e6e6; \n        background-position: 0 -15px; \n    }\n    .btn-primary, .btn-primary:hover { \n        text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25); \n        color: #ffffff; \n    }\n    .btn-primary { \n        background-color: #4a77d4;   \n        border: 1px solid #3762bc; \n        text-shadow: 1px 1px 1px rgba(0,0,0,0.4); \n        box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.5); \n    }\n    .btn-primary:hover, .btn-primary:active, .btn-primary.active{ \n        filter: none; \n        background-color: #5549b2;\n    }\n    .btn-block { \n        width: 60px; \n        height: 25px;\n        display: block; \n    }\n`","import PropTypes from 'prop-types';\nimport { ContactsStyle } from \"../Contacts/Contacts.styled\";\n\nexport const ContactsList = ({filteredContacts, onDeleteContact}) => {\n    return (\n        <ContactsStyle>\n            {filteredContacts.map(({id, name, number}) => (\n                <li className=\"list\" key={id}>\n                    <h3 className=\"list-name\">{name}:</h3>\n                    <p className=\"list-number\">{number}</p>\n                    <button className=\"btn btn-primary btn-block btn-large\" \n                    type=\"button\"\n                    onClick={() => onDeleteContact(id)}>Delete</button>\n                </li>\n            ))}\n        </ContactsStyle>\n    )\n};\n\nContactsList.propTypes ={\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n        })\n    ),\n    onDeleteContact: PropTypes.func.isRequired,\n};","import { styled } from \"styled-components\";\n\nexport const TextStyle = styled.div`\n    margin: 0;\n    padding: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 40px;\n    .text-style{\n        font-size: 20px;\n    }\n`","import PropTypes from 'prop-types';\nimport { TextStyle } from './Notification.styled';\n\n\nexport const Notification = ({message}) => {\n    return (\n        <TextStyle>\n            <h3 className='text-style'>{message}</h3>\n        </TextStyle>\n    )\n};\n\nNotification.protoTypes = {\n    message: PropTypes.string.isRequired,\n};","import { styled } from \"styled-components\";\n\n\nexport const TextFilterStyle = styled.div`\n    margin: 0;\n    padding: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 40px;\n    .text-style{\n        font-size: 20px;\n    }\n`","import PropTypes from 'prop-types';\nimport {TextFilterStyle } from './NotificationFilter.styled'\n\nexport const NotificationFilter = ({notification}) => {\n    return(\n        <TextFilterStyle>\n            <h3 className='text-style'>{notification}</h3>\n        </TextFilterStyle>\n    )\n}\n\nNotificationFilter.protoTypes = {\n    message: PropTypes.string.isRequired,\n};","import { useSelector, useDispatch } from 'react-redux';\n//import { remove } from \"redux/contactsSlice\";\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Notification } from \"components/Notification/Notification\";\nimport { NotificationFilter } from \"components/NotificationFilter/NotificationFilter\";\nimport { deleteContactById } from 'redux/Contacts/contactOperations';\nimport { selectContacts, selectFilter, selectLoading } from '../../redux/selectors';\n\nexport const Contacts = () => {\n\n    const isLoading = useSelector(selectLoading);\n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n    //const contacts = useSelector(state => state.contacts);\n    //const dispatch = useDispatch();\n    //const filter = useSelector(state => state.filter);\n    //console.log(contacts);\n    //console.log(filter);\n\n    const filteredContacts = contacts.filter(contact => {\n        return (\n            contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n            contact.number.includes(filter)\n        );\n    });\n  \n    const onDeleteContact = contactId  => {\n        dispatch(deleteContactById(contactId));\n    };\n\n    if (isLoading) {\n        return <p>Loading data...</p>\n    }\n\n    return (\n        <>\n            {contacts.length === 0 ? (\n            <Notification message=\"There are no contacts in your list, sorry\" />\n            ) : filteredContacts.length > 0 ? (\n            <ContactsList\n                filteredContacts={filteredContacts}\n                onDeleteContact={onDeleteContact}\n            />\n            ) : (\n            <NotificationFilter notification=\"No contacts found that match the filter\" />\n            )}\n        </>\n    );\n};","import {styled} from \"styled-components\";\n\nexport const RedirectLinkStyles = styled.div`\n    background-color: #85afe4c0;\n    width: -webkit-fill-available;\n    .link {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 5px;\n        text-decoration: none;\n        padding: 10px;\n        font-size: 18px;\n        letter-spacing: 1px;\n        transition: color 0.25s;\n\n        &:hover, &:focus {\n        color: #5549b2;\n        }\n    \n    @media (min-width: 768px) {\n      font-size: 24px;\n    }\n  }\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n`","import { Section } from 'components/Section/Section';\nimport { Containers } from 'components/Containers/Container';\nimport { Filter } from 'components/Filter/Filter';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { RedirectLinkStyles } from './Contacts.styled';\nimport { useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { getAllContacts } from 'redux/Contacts/contactOperations';\n\nconst ContactsPage = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n      dispatch(getAllContacts())\n    })\n    \n    return(\n        <>\n            <Section>\n                <RedirectLinkStyles>\n                    <NavLink className='link btn btn-primary btn-block btn-large' to=\"/createcontacts\">\n                        Back to Ctreate\n                    </NavLink>\n                </RedirectLinkStyles>\n                <Containers title={'Filter'}>\n                    <Filter/>\n                </Containers>\n                <Containers title={'Contacts'}>\n                    <Contacts/>\n                </Containers>\n            </Section>\n        </>\n    );\n};\n\n\nexport default ContactsPage;","export const selectContacts = state => state.contacts.contacts;\nexport const selectFilter = state => state.filter.filter;\nexport const selectLoading = state => state.contacts.isLoading;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["ContainersStyle","styled","_templateObject","_taggedTemplateLiteral","Containers","_ref","title","children","_jsxs","_jsx","className","SectionStyle","Section","FilterStyle","Filter","dispatch","useDispatch","filter","useSelector","selectFilter","htmlFor","type","name","required","placeholder","value","onChange","event","filterValue","target","ContactsStyle","ContactsList","filteredContacts","onDeleteContact","map","_ref2","id","number","onClick","TextStyle","Notification","message","protoTypes","PropTypes","TextFilterStyle","NotificationFilter","notification","Contacts","isLoading","selectLoading","contacts","selectContacts","contact","toLowerCase","includes","_Fragment","length","contactId","deleteContactById","RedirectLinkStyles","useEffect","getAllContacts","NavLink","to","state","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}